{
    "openapi": "3.0.0",
    "info": {
        "title": "Vehicle Management API",
        "description": "A comprehensive API for managing vehicles, documents, maintenance records, and vehicle exchanges with role-based access control.",
        "contact": {
            "name": "API Support",
            "email": "support@vehiclemanagement.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/v1",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account with email and password",
                "operationId": "5d4fa5d5607ed675ba93907e1fc94534",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "chauffeur"
                                        ],
                                        "example": "chauffeur"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and return access token",
                "operationId": "67d6d0fdd54fba132e1b6f55ca254183",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|abc123..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revoke the current access token",
                "operationId": "28d48c13fca984400ac8de99f54ee13a",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "description": "Get the authenticated user's information",
                "operationId": "2baab1eeb5fd49516237a38da22e7a07",
                "responses": {
                    "200": {
                        "description": "User information retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles/{vehicle_id}/documents": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get vehicle documents",
                "description": "Retrieve all documents for a specific vehicle",
                "operationId": "5e04a7ae998e2e162f5561c6d7d609cc",
                "parameters": [
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Documents retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VehicleDocument"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Upload vehicle document",
                "description": "Upload a new document for a vehicle",
                "operationId": "e3a4b2145cb673457af63a93cd1c0513",
                "parameters": [
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type",
                                    "expiration_date",
                                    "file"
                                ],
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "carte_grise",
                                            "assurance",
                                            "controle_technique"
                                        ],
                                        "example": "assurance"
                                    },
                                    "expiration_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-12-31"
                                    },
                                    "file": {
                                        "description": "Document file (PDF, JPG, JPEG, PNG, max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Document uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Document created successfully"
                                        },
                                        "document": {
                                            "$ref": "#/components/schemas/VehicleDocument"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles/{vehicle_id}/documents/{document_id}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get document details",
                "description": "Retrieve details of a specific vehicle document",
                "operationId": "8f5d7f2b1392bc8434fa6703abf4db2d",
                "parameters": [
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "document_id",
                        "in": "path",
                        "description": "Document ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "document": {
                                            "$ref": "#/components/schemas/VehicleDocument"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Document not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles/{vehicle_id}/documents/expiring": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get expiring documents",
                "description": "Get documents that are expiring soon for a specific vehicle",
                "operationId": "48facaffbaf0b427a78fe70d2df2e550",
                "parameters": [
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to check for expiring documents",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Expiring documents retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "documents": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VehicleDocument"
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/exchanges": {
            "get": {
                "tags": [
                    "Exchanges"
                ],
                "summary": "Get vehicle exchanges",
                "description": "Retrieve all vehicle exchange requests (Admin sees all, Chauffeur sees only their own)",
                "operationId": "b06d30928a8c46fd132732270c2a7247",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by exchange status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "approved",
                                "rejected"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchange requests retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VehicleExchange"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Exchanges"
                ],
                "summary": "Create vehicle exchange request",
                "description": "Create a new vehicle exchange request (Chauffeur only)",
                "operationId": "3e41fd3b24eb9197a860b213937786d8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "to_driver_id",
                                    "vehicle_id"
                                ],
                                "properties": {
                                    "to_driver_id": {
                                        "description": "ID of the chauffeur to exchange with",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "vehicle_id": {
                                        "description": "ID of the vehicle to exchange",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "Need to exchange for maintenance",
                                        "nullable": true
                                    },
                                    "before_photo": {
                                        "description": "Photo before exchange (JPG, JPEG, PNG, max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Exchange request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle exchange request created successfully"
                                        },
                                        "exchange": {
                                            "$ref": "#/components/schemas/VehicleExchange"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Chauffeur only"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/exchanges/{id}/approve": {
            "post": {
                "tags": [
                    "Exchanges"
                ],
                "summary": "Approve exchange request",
                "description": "Approve a vehicle exchange request (Admin only)",
                "operationId": "83da0a55f7cb4e23d0e1edd98595c3c8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exchange ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchange approved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exchange approved successfully"
                                        },
                                        "exchange": {
                                            "$ref": "#/components/schemas/VehicleExchange"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "404": {
                        "description": "Exchange not found"
                    },
                    "422": {
                        "description": "Exchange is not pending"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/exchanges/{id}/reject": {
            "post": {
                "tags": [
                    "Exchanges"
                ],
                "summary": "Reject exchange request",
                "description": "Reject a vehicle exchange request (Admin only)",
                "operationId": "369ce7cf868ed25029f239882289a78d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exchange ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchange rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exchange rejected successfully"
                                        },
                                        "exchange": {
                                            "$ref": "#/components/schemas/VehicleExchange"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "404": {
                        "description": "Exchange not found"
                    },
                    "422": {
                        "description": "Exchange is not pending"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/my-exchanges": {
            "get": {
                "tags": [
                    "Exchanges"
                ],
                "summary": "Get my exchanges",
                "description": "Get all exchange requests for the authenticated chauffeur",
                "operationId": "8e330207346ebf64ce4bc334c75884a7",
                "responses": {
                    "200": {
                        "description": "User exchanges retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/VehicleExchange"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles/{vehicle_id}/maintenances": {
            "get": {
                "tags": [
                    "Maintenance"
                ],
                "summary": "Get vehicle maintenance records",
                "description": "Retrieve all maintenance records for a specific vehicle",
                "operationId": "6f0e4d38ce49510d9a714c534a5c5166",
                "parameters": [
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Maintenance records retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Maintenance"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Maintenance"
                ],
                "summary": "Create maintenance record",
                "description": "Create a new maintenance record for a vehicle",
                "operationId": "12c08ec5bc1bd940b7d4aed4f2159868",
                "parameters": [
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "maintenance_type",
                                    "description",
                                    "date"
                                ],
                                "properties": {
                                    "maintenance_type": {
                                        "type": "string",
                                        "example": "Oil Change"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Regular oil change service"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "reminder_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-04-15",
                                        "nullable": true
                                    },
                                    "invoice": {
                                        "description": "Invoice file (PDF, JPG, JPEG, PNG, max 2MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Maintenance record created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Maintenance record created successfully"
                                        },
                                        "maintenance": {
                                            "$ref": "#/components/schemas/Maintenance"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles/{vehicle_id}/maintenances/upcoming": {
            "get": {
                "tags": [
                    "Maintenance"
                ],
                "summary": "Get upcoming maintenance",
                "description": "Get upcoming maintenance reminders for a specific vehicle",
                "operationId": "0e6b72760ecc05ea5bcafeb737d2056e",
                "parameters": [
                    {
                        "name": "vehicle_id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to check for upcoming maintenance",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upcoming maintenance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "maintenances": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Maintenance"
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users (Admin only)",
                "operationId": "7208c29037df2b8bb02499ba39ed8a78",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by user role",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "admin",
                                "chauffeur"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "description": "Create a new user account (Admin only)",
                "operationId": "262eb5ca1fdea354023c0a8870442c1e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "chauffeur"
                                        ],
                                        "example": "chauffeur"
                                    },
                                    "vehicle_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{id}/assign-vehicle": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Assign vehicle to user",
                "description": "Assign a vehicle to a specific user (Admin only)",
                "operationId": "0b737df5eb7cd793c16ef67660c35b21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "vehicle_id"
                                ],
                                "properties": {
                                    "vehicle_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle assigned successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Vehicle already assigned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle is already assigned to another user"
                                        },
                                        "assigned_to": {
                                            "type": "string",
                                            "example": "John Doe"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "description": "Update the specified user's data (Admin only). Admin users cannot be modified.",
                "operationId": "05028d02ea3e9a99abd6260cfe05b179",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "jane@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error OR Admin user cannot be modified"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Delete the specified user (Admin only). Deleting the last admin is not allowed.",
                "operationId": "b3d28da5dc9de7fc1bd425f93b54ff7b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Cannot delete the last admin user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cannot delete the last admin user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles": {
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Get all vehicles",
                "description": "Retrieve a paginated list of vehicles with optional filtering",
                "operationId": "f627fb85543e356532922246d50e6e2a",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by vehicle status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "archived"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by registration number or model",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicles retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Vehicle"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Create a new vehicle",
                "description": "Create a new vehicle (Admin only)",
                "operationId": "3b250a933fc5648aedd688fdcf4eae81",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "registration_number",
                                    "model",
                                    "year"
                                ],
                                "properties": {
                                    "registration_number": {
                                        "type": "string",
                                        "example": "ABC-123"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Toyota Camry"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "minimum": 1900,
                                        "example": 2022
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle created successfully"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles/{id}": {
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Get vehicle details",
                "description": "Retrieve detailed information about a specific vehicle",
                "operationId": "00b76a563ae78ef08e92480a3cd58a9e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Update vehicle",
                "description": "Update vehicle information (Admin only)",
                "operationId": "322797dc21f323e627fc60773b7130c6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "registration_number",
                                    "model",
                                    "year"
                                ],
                                "properties": {
                                    "registration_number": {
                                        "type": "string",
                                        "example": "ABC-123"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Toyota Camry"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "minimum": 1900,
                                        "example": 2022
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Vehicle updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle updated successfully"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Delete vehicle",
                "description": "Archive a vehicle (Admin only)",
                "operationId": "7fbf332babe156123bfa2b84d32bb68a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle archived successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle archived successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles/{id}/archive": {
            "post": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Archive vehicle",
                "description": "Archive a specific vehicle (Admin only)",
                "operationId": "d5671a3711b0bffc8871675362c435ab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle archived successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle archived successfully"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/vehicles/{id}/restore": {
            "post": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Restore archived vehicle",
                "description": "Restore an archived vehicle (Admin only)",
                "operationId": "6bb31fb6c9cefcc19a968e9fbf3fb60e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Vehicle ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle restored successfully"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden - Admin only"
                    },
                    "404": {
                        "description": "Vehicle not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/my-vehicle": {
            "get": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Get my assigned vehicle",
                "description": "Get the vehicle assigned to the authenticated chauffeur",
                "operationId": "d79ae033a33b8cda487382cf3feb24b4",
                "responses": {
                    "200": {
                        "description": "Vehicle information retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No vehicle assigned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No vehicle assigned to you"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ErrorResponse": {
                "title": "Error Response",
                "description": "Standard error response format",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "email": [
                                "The email field is required."
                            ],
                            "password": [
                                "The password field is required."
                            ]
                        }
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "title": "Success Response",
                "description": "Standard success response format",
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "description": "Response data",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PaginatedResponse": {
                "title": "Paginated Response",
                "description": "Standard paginated response format",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v1/vehicles?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 5
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v1/vehicles?page=5"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": "http://example.com/api/v1/vehicles?page=2",
                        "nullable": true
                    },
                    "path": {
                        "type": "string",
                        "example": "http://example.com/api/v1/vehicles"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 15
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 15
                    },
                    "total": {
                        "type": "integer",
                        "example": 67
                    }
                },
                "type": "object"
            },
            "VehicleDocument": {
                "title": "Vehicle Document",
                "description": "Vehicle document model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "vehicle_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "carte_grise",
                            "assurance",
                            "controle_technique"
                        ],
                        "example": "assurance"
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-12-31"
                    },
                    "file_path": {
                        "type": "string",
                        "example": "documents/doc_2024-01-01_abc123.pdf",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Maintenance": {
                "title": "Maintenance",
                "description": "Vehicle maintenance record model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "vehicle_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "maintenance_type": {
                        "type": "string",
                        "example": "Oil Change"
                    },
                    "description": {
                        "type": "string",
                        "example": "Regular oil change service"
                    },
                    "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-01-15"
                    },
                    "reminder_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-04-15",
                        "nullable": true
                    },
                    "invoice_path": {
                        "type": "string",
                        "example": "invoices/inv_2024-01-15_xyz789.pdf",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "VehicleExchange": {
                "title": "Vehicle Exchange",
                "description": "Vehicle exchange request model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "from_driver_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "to_driver_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "vehicle_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "request_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T10:00:00Z"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ],
                        "example": "pending"
                    },
                    "before_photo_path": {
                        "type": "string",
                        "example": "exchange_photos/photo_2024-01-01_abc123.jpg",
                        "nullable": true
                    },
                    "after_photo_path": {
                        "type": "string",
                        "example": "exchange_photos/photo_2024-01-01_def456.jpg",
                        "nullable": true
                    },
                    "note": {
                        "type": "string",
                        "example": "Vehicle needs maintenance",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "chauffeur"
                        ],
                        "example": "chauffeur"
                    },
                    "vehicle_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Vehicle": {
                "title": "Vehicle",
                "description": "Vehicle model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "registration_number": {
                        "type": "string",
                        "example": "ABC-123"
                    },
                    "model": {
                        "type": "string",
                        "example": "Toyota Camry"
                    },
                    "year": {
                        "type": "integer",
                        "example": 2022
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "archived"
                        ],
                        "example": "active"
                    },
                    "archived_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your bearer token in the format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and authorization endpoints"
        },
        {
            "name": "Vehicles",
            "description": "Vehicle management operations"
        },
        {
            "name": "Documents",
            "description": "Vehicle document management"
        },
        {
            "name": "Maintenance",
            "description": "Vehicle maintenance records"
        },
        {
            "name": "Exchanges",
            "description": "Vehicle exchange requests"
        },
        {
            "name": "Users",
            "description": "User management (Admin only)"
        }
    ]
}